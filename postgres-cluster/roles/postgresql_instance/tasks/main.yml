- name: Install PostgreSQL official repo via dnf
  ansible.builtin.dnf:
    name: "https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
    state: present

- name: Disable built-in PostgreSQL module
  ansible.builtin.command: dnf -qy module disable postgresql
  args:
    warn: false

- name: Install PostgreSQL server via dnf
  ansible.builtin.dnf:
    name: "postgresql15-server"
    state: present

- name: Initialize PostgreSQL database
  ansible.builtin.command: "/usr/pgsql-15/bin/postgresql-15-setup initdb"
  args:
    creates: "/var/lib/pgsql/15/data/PG_VERSION"

- name: Enable and start PostgreSQL service
  ansible.builtin.service:
    name: "postgresql-15"
    enabled: true
    state: started

- name: Create standby.signal on slave
  when: inventory_hostname == "pgslave"
  file:
    path: "{{ pg_data_dir }}/standby.signal"
    state: touch
    owner: postgres
    group: postgres
    mode: '0644'

- name: Deploy postgresql.conf
  template:
    src: postgresql.conf.j2
    dest: "{{ pg_data_dir }}/postgresql.conf"
    owner: postgres
    group: postgres
    mode: '0644'

- name: Deploy pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: "{{ pg_data_dir }}/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: '0600'

- name: Start PostgreSQL instance
  become_user: postgres
  shell: >
    /usr/pgsql-{{ postgres_version }}/bin/pg_ctl -D {{ pg_data_dir }}
    -o '-p {{ pg_port }}' -l {{ pg_data_dir }}/logfile start
  register: result
  args:
    creates: "{{ pg_data_dir }}/postmaster.pid"

- name: 結果を表示
  debug:
       var: result